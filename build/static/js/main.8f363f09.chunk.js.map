{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","class","content","onClick","Notification","message","className","baseUrl","noteService","getAll","axios","get","create","newObject","post","update","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","then","response","data","length","notesToShow","filter","map","i","url","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f363f09.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  return (\r\n    <li class='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","const Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className='error'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/notes'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\n// const getAll = () => {\r\n//   const request = axios.get(baseUrl)\r\n//   return request.then(response => response.data)\r\n// }\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\n// export default { \r\n//   getAll: getAll, \r\n//   create: create, \r\n//   update: update \r\n// }\r\n// export default {getAll, create, update} // ES6 \r\n\r\nconst noteService = {\r\n  getAll, create, update\r\n}\r\n\r\nexport default noteService\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\n\r\nconst Footer = () => {\r\n  const footStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return <div style={footStyle}>\r\n    <br />\r\n    <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n  </div>\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('a new note...')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null) // some error happened...\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n    // axios.get('http://localhost:3001/notes').then( // GET\r\n    noteService.getAll().then(response => { // 提取 GET\r\n      console.log('promise fulfilled')\r\n      setNotes(response.data)\r\n    }\r\n    )\r\n\r\n    noteService.getAll().then(response => {\r\n      setNotes(response.data)\r\n    })\r\n  }, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault() // 阻止页面重新加载 不是页面刷新 \r\n    // console.log('button clicked', event.target)\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1\r\n    }\r\n    // setNotes(notes.concat(noteObject)) // 此操作会更新 app 组件的状态\r\n\r\n    // part2/d\r\n    // axios.post('http://localhost:3001/notes', noteObject).then(response => { // POST 更改了 db.json\r\n    noteService.create(noteObject).then(response => { // 提取 POST\r\n      console.log(response)\r\n      setNotes(notes.concat(response.data)) // 只更改了 App 的 note\r\n      setNewNote('')\r\n    })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    console.log('importance of ' + id + ' needs to be toggled')\r\n    const url = `http://localhost:3001/notes/${id}`\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n    axios.put(url, changedNote).then(response => { // PUT\r\n    // noteService.update(id, changedNote).then(response => { // 提取 PUT\r\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\r\n    }).catch(error => {\r\n      // alert(`the note '${note.content}' was already deleted from server`)\r\n      setErrorMessage(`Note '${note.content}' was already deleted from server`)\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000);\r\n      setNotes(notes.filter(n => n.id !== id))\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)} >\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          // <li key={note.id}> {note.content} </li>\r\n          <Note key={i} note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\n// import axios from 'axios'\r\n\r\n\r\n// 测试 promise\r\n// const promise = axios.get('http://localhost:3001/notes')\r\n// console.log(promise) // fulfilled\r\n\r\n// const promise2 = axios.get('http://localhost:3001/foobar')\r\n// console.log(promise2) // rejected\r\n\r\n// 请求并渲染 （从本地 JSON 服务器\r\n// axios.get('http://localhost:3001/notes').then(response => {\r\n//   const notes = response.data\r\n//   ReactDOM.render(\r\n//     <App notes={notes} />,\r\n//     document.getElementById('root')\r\n//   )\r\n// })\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}